name: Testing K3s-monitoring

on:
  push:
    branches: [ feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Install-dependencies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Build Docker image
      run: |
        docker build -t flask-monitor:ci-test ./flask-app

  deploy-k3s:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up K3d
      run: |
        curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
        k3d cluster create test-cluster --wait

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./k8s

    - name: Wait for pods to be ready
      run: |
        kubectl wait --for=condition=ready pod --all --timeout=120s -n default

    - name: Test application in Kubernetes
      run: |
        kubectl get pods
        kubectl port-forward svc/flask-monitor-service 5000:5000 &
        curl -s http://localhost:5000 | grep "Kubernetes Monitor Running!"
